# MLflow tracking
mlflow: True

# Global dataset parameters
dataset_dir: &dataset_dir "/home/ubuntu/yolo/datasets/novartis"  # Base directory for dataset
num_classes: &num_classes 4                                     # Number of classes in dataset
class_names: &class_names                                       # List of class names
  - 'b-mouse'
  - 'b-drinking'
  - 'b-climbing'
  - 'b-feeding'
input_dim: &input_dim [640, 640]                                # Input dimension (width, height)
annotations_format: 'yolo'                                      # Annotation format [yolo, coco]

# Training dataset configuration
train_dataset_params:
  data_dir: *dataset_dir                                        # Path to the dataset root
  images_dir: images/train                                      # Sub-path for training images
  labels_dir: labels/train                                      # Sub-path for training annotations
  input_dim: *input_dim
  ignore_empty_annotations: False                               # Flag to ignore images without annotations
  classes: *class_names
  transforms:                                                   # Data augmentation and pre-processing pipeline
    - DetectionRandomAffine:
        degrees: 0                                              # Random rotation range (degrees)
        scales: [0.5, 1.5]                                      # Scale range for random resizing
        shear: 0.0                                              # Shear range
        target_size: *input_dim
        filter_box_candidates: False                            # Whether to filter bounding boxes post-transform
        border_value: 128                                       # Background color value for padded regions
    - DetectionHSV:
        prob: 1.0                                               # Probability to apply HSV augmentation
        hgain: 5                                                # Max hue adjustment
        vgain: 30                                               # Max value (brightness) adjustment
        sgain: 30                                               # Max saturation adjustment
    - DetectionHorizontalFlip:
        prob: 0.5                                               # Probability of horizontal flip
    - DetectionPaddedRescale:
        input_dim: *input_dim                                   # Scale and pad images to input dimension
    - DetectionStandardize:
        max_value: 255.0                                        # Normalize pixel values to [0, 1] range
    - DetectionTargetsFormatTransform:
        input_dim: *input_dim
        output_format: LABEL_CXCYWH                             # Target format (class, x-center, y-center, w, h)

# Validation dataset configuration
val_dataset_params:
  data_dir: *dataset_dir                                        # Path to dataset root
  images_dir: images/val                                        # Sub-path for validation images
  labels_dir: labels/val                                        # Sub-path for validation annotations
  input_dim: *input_dim
  ignore_empty_annotations: False
  classes: *class_names
  transforms:                                                   # Pre-processing pipeline for validation
    - DetectionPaddedRescale:
        input_dim: *input_dim
        max_targets: 300                                        # Maximum targets (bounding boxes) per image
    - DetectionStandardize:
        max_value: 255.0
    - DetectionTargetsFormatTransform:
        input_dim: *input_dim
        output_format: LABEL_CXCYWH

# DataLoader configuration
num_workers: &num_workers 0                                     # Number of workers for data loading
batch_size: &batch_size 32                                      # Batch size for training and validation

train_dataloader_params:
  shuffle: True                                                 # Shuffle training data
  batch_size: *batch_size
  drop_last: True                                               # Drop last batch if it's smaller than batch_size
  pin_memory: True                                              # Use pinned memory
  collate_fn: DetectionCollateFN                                # Collate function for batch processing
  num_workers: *num_workers
  persistent_workers: False

val_dataloader_params:
  shuffle: False                                                # Do not shuffle validation data
  batch_size: *batch_size
  drop_last: False                                              # Do not drop last batch
  pin_memory: True
  collate_fn: DetectionCollateFN
  num_workers: *num_workers

# Model and training configuration
model:
  model_name: yolo_nas_s                                        # Model architecture to use
  num_classes: *num_classes
  pretrained_weights: coco                                      # Use pretrained weights if available

training_hyperparams:
  warmup_initial_lr: 1e-5                                       # Initial learning rate during warmup
  initial_lr: 5e-4                                              # Base learning rate
  lr_mode: CosineLRScheduler                                    # Learning rate scheduler type
  cosine_final_lr_ratio: 0.5                                    # Final LR as a fraction of initial_lr for CosineLR
  optimizer: AdamW                                              # Optimizer choice
  zero_weight_decay_on_bias_and_bn: True                        # Apply no weight decay on bias and batch norm
  lr_warmup_epochs: 1                                           # Number of warmup epochs
  warmup_mode: LinearEpochLRWarmup                              # Warmup strategy
  optimizer_params:
    weight_decay: 0.0001                                        # L2 regularization weight
  ema: False                                                    # Use EMA (Exponential Moving Average) for weights
  average_best_models: False                                    # Save best model over training epochs
  ema_params:
    decay: 25                                                   # EMA decay rate
    decay_type: exp                                             # EMA decay type
  max_epochs: 100                                               # Number of training epochs
  mixed_precision: True                                         # Use mixed precision (FP16) for faster training
  loss: PPYoloELoss                                             # Loss function for training
  criterion_params:
    use_static_assigner: False
    num_classes: *num_classes 
    reg_max: 16                                                 # Regularization max value for bounding box regression
  valid_metrics_list:                                           # List of validation metrics to calculate
    - _target_: super_gradients.training.metrics.DetectionMetrics_050
      score_thres: 0.1                                          # Confidence threshold for predictions
      top_k_predictions: 300                                    # Max predictions per image
      num_cls: *num_classes
      normalize_targets: True                                   # Normalize target boxes to [0,1]
      include_classwise_ap: True                                # Include AP for each class
      class_names: *class_names
      post_prediction_callback:                                 # Post-processing for predictions
        _target_: super_gradients.training.models.detection_models.pp_yolo_e.PPYoloEPostPredictionCallback
        score_threshold: 0.01
        nms_top_k: 1000                                         # Max boxes to consider for NMS
        max_predictions: 300
        nms_threshold: 0.7                                      # NMS overlap threshold
    - _target_: super_gradients.training.metrics.DetectionMetrics_050_095
      score_thres: 0.1
      top_k_predictions: 300
      num_cls: *num_classes
      normalize_targets: True
      include_classwise_ap: True
      class_names: *class_names
      post_prediction_callback:
        _target_: super_gradients.training.models.detection_models.pp_yolo_e.PPYoloEPostPredictionCallback
        score_threshold: 0.01
        nms_top_k: 1000
        max_predictions: 300
        nms_threshold: 0.7
  metric_to_watch: 'mAP@0.50:0.95'                              # Main metric to track during validation
